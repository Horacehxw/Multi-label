# This file was auto-generated by Makefile.
 
from distutils.core import setup, Extension
import os, os.path

commonDir = os.path.join('c_src','common')
commonSrc = ['misc.c','tclHash.c', 'VPSet.c', 'VPStack.c']

pyLDPCdir = os.path.join('c_src','pyLDPC')
pyLDPCsrc = ['CodeGraph.c','SumProductBP.c',
             'Nodes.c','BECQuant.c','DualCodeGraph.c',
              'BSCQuant.c', 'MinSumBP.c', 'CodeGraphAlgorithms.c',
             'CodeGraphSumProductAlgs.c',
             'DualCodeGraphAlgorithms.c', 'DualCodeGraphSumProductAlgs.c',
             'pyLDPC.c'] 

pySATdir = os.path.join('c_src','pySAT')
pySATsrc = ['pySAT.c','SatGraph.c',
            'SatGraphAlgorithm.c','SatSolve.c'] 

def MakeDocs():
    p = os.popen('cd doc; make all 2>&1','r')
    output = p.read()
    status = p.close()
    if (status):
        msg = ('Could not create documentation.  Received output \n' + '-'*70
               + '\n' + output + '-'*70 + '\nand status ' + `status` + '.\n')
        print msg

MakeDocs()

setup(name = 'pycodes',
      version = '1.1',
      description = 'Python module for LDPC codes & circuit satisfiability',
      author = 'Emin Martinian',
      author_email = 'emin@allegro.mit.edu',
      package_dir = {'pycodes':''},
      packages = ['pycodes',
                  'pycodes.utils','pycodes.tests',
                  'pycodes.tests.channel_coding',
                  'pycodes.tests.channel_coding.BSC',
                  'pycodes.tests.channel_coding.BEC',
                  'pycodes.tests.quantization',
                  'pycodes.tests.quantization.BSC',
                  'pycodes.tests.quantization.BEC'],
      data_files=([('doc',
                   map(lambda x: os.path.join('doc',x),
                       ['pycodes.html','pycodes.info']))]),
      ext_modules = [
    Extension('pycodes.pyLDPC',
              map(lambda x: os.path.join(pyLDPCdir,x),pyLDPCsrc) +
              map(lambda x: os.path.join(commonDir,x),commonSrc),
              extra_objects = [],
              undef_macros = ['NDEBUG'],
              #libraries = ['dmalloc'],# use these 2 lines to debug mem errors
              #define_macros = [('DMALLOC',1)], # using the dmalloc program
              extra_compile_args = ['-O0','-g','-I'+commonDir]),
    Extension('pycodes.pySAT',
              map(lambda x: os.path.join(pySATdir,x),pySATsrc) +
              map(lambda x: os.path.join(commonDir,x),commonSrc),
              extra_objects = [],
              undef_macros = ['NDEBUG'],
              #libraries = ['dmalloc'],# use these 2 lines to debug mem errors
              #define_macros = [('DMALLOC',1)], # using the dmalloc program
              extra_compile_args = ['-O0','-g','-I'+commonDir])])
